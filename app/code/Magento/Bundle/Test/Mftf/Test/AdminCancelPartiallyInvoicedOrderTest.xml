<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCancelPartiallyInvoicedOrderTest">
        <annotations>
            <features value="Bundle"/>
            <stories value="Cancel partially invoiced order"/>
            <title value="Cancel for order that was partially invoiced with Bundle product type"/>
            <description value="It is possible to cancel partially invoiced order"/>
            <severity value="MAJOR"/>
            <testCaseId value=""/>
            <group value="bundle"/>
            <group value="mtf_migrated"/>
        </annotations>
        <before>
            <createData entity="SimpleSubCategory" stepKey="testCategory"/>
            <createData entity="ApiSimpleProduct" stepKey="simpleProduct1">
                <requiredEntity createDataKey="testCategory"/>
            </createData>
            <createData entity="ApiSimpleProduct" stepKey="simpleProduct2">
                <requiredEntity createDataKey="testCategory"/>
            </createData>

            <createData entity="BundleProductPriceViewRange" stepKey="bundleProduct">
                <requiredEntity createDataKey="testCategory"/>
            </createData>
            <createData entity="DropDownBundleOption" stepKey="bundleOptionDropdown">
                <requiredEntity createDataKey="bundleProduct"/>
            </createData>
            <createData entity="ApiBundleLink" stepKey="createBundleLink1Dropdown">
                <requiredEntity createDataKey="bundleProduct"/>
                <requiredEntity createDataKey="bundleOptionDropdown"/>
                <requiredEntity createDataKey="simpleProduct1"/>
            </createData>
            <createData entity="ApiBundleLink" stepKey="createBundleLink2Dropdown">
                <requiredEntity createDataKey="bundleProduct"/>
                <requiredEntity createDataKey="bundleOptionDropdown"/>
                <requiredEntity createDataKey="simpleProduct2"/>
            </createData>

            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>

            <!-- Grab bundle option name for Bundle Product -->
            <actionGroup ref="NavigateToCreatedProductEditPageActionGroup" stepKey="goToBundleProduct">
                <argument name="product" value="$$bundleProduct$$"/>
            </actionGroup>
            <grabTextFrom selector="{{AdminProductFormBundleSection.currentBundleOption}}" stepKey="grabBundleOption"/>
            <assertNotEmpty stepKey="assertBundleOption1NotEmpty">
                <actualResult type="const">$grabBundleOption</actualResult>
            </assertNotEmpty>

            <createData entity="Simple_US_Customer_CA" stepKey="testCustomer"/>

            <createData entity="FlatRateShippingMethodDefault" stepKey="setDefaultFlatRateShippingMethod"/>
            <createData entity="CashOnDeliveryPaymentMethodDefault" stepKey="cashOnDeliveryPaymentMethod"/>

            <magentoCron stepKey="runCronReindex" groups="index"/>

            <actionGroup ref="NavigateToNewOrderPageExistingCustomerActionGroup" stepKey="navigateToNewOrderWithExistingCustomer">
                <argument name="customer" value="$$testCustomer$$"/>
            </actionGroup>

            <actionGroup ref="AdminFilterProductInCreateOrderActionGroup" stepKey="filterBundleProduct">
                <argument name="productSKU" value="$$bundleProduct.sku$$"/>
            </actionGroup>

           <actionGroup ref="AdminAddToOrderBundleProductActionGroup" stepKey="addBundleProductToOrder">
                <argument name="option" value="{$grabBundleOption}"/>
                <argument name="selectedProductName" value="$$simpleProduct1.name$$"/>
                <argument name="quantity" value="2"/>
            </actionGroup>

            <actionGroup ref="SelectCashOnDeliveryPaymentMethodActionGroup" stepKey="selectPaymentMethod"/>
            <actionGroup ref="OrderSelectFlatRateShippingActionGroup" stepKey="orderSelectFlatRateShippingMethod"/>
            <actionGroup ref="AdminSubmitOrderActionGroup" stepKey="submitOrder"/>
            <actionGroup ref="VerifyCreatedOrderInformationActionGroup" stepKey="verifyCreatedOrderInformation"/>

        </before>

        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutAsAdmin"/>

            <deleteData createDataKey="cashOnDeliveryPaymentMethod" stepKey="deleteCashOnDeliveryPaymentMethod"/>
            <deleteData createDataKey="orderSelectFlatRateShippingMethod" stepKey="deleteOrderSelectFlatRateShippingMethod"/>

            <deleteData createDataKey="testCustomer" stepKey="deleteTestCustomer"/>
            <deleteData createDataKey="bundleProduct" stepKey="deleteBundleProduct"/>

            <deleteData createDataKey="simpleProduct1" stepKey="deleteSimpleProduct1"/>

            <deleteData createDataKey="simpleProduct2" stepKey="deleteSimpleProduct2"/>
            <deleteData createDataKey="testCategory" stepKey="deleteTestCategory"/>

            <magentoCron stepKey="runCronReindex" groups="index"/>
        </after>

            <grabTextFrom selector="|Order # (\d+)|" stepKey="getOrderId"/>

            <actionGroup ref="OpenOrderByIdActionGroup" stepKey="openOrder">
                <argument name="orderId" value="$getOrderId"/>
            </actionGroup>

            <actionGroup ref="GoToInvoiceIntoOrderActionGroup" stepKey="createInvoice"/>

            <actionGroup ref="AdminSetQtyToInvoiceActionGroup" stepKey="changeQtyToInvoice">
                <argument name="product" value="bundleProduct"/>
                <argument name="qty" value="1"/>
            </actionGroup>

            <actionGroup ref="AdminUpdateQtyInInvoiceActionGroup" stepKey="updateQtyToInvoice"/>

            <actionGroup ref="SubmitInvoiceActionGroup" stepKey="submitInvoice"/>

            <!-- Cancel order -->
            <actionGroup ref="CancelPendingOrderActionGroup" stepKey="cancelOrder">
                <argument name="orderStatus" value="Processing"/>
            </actionGroup>

    </test>
</tests>

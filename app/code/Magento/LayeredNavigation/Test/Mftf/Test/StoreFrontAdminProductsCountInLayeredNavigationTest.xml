<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StoreFrontAdminProductsCountInLayeredNavigationTest">
        <before>
            <!-- Create four categories assigned in ascending order:
             Category 1 (non-anchor) -> Category 2 (anchor) -> Category 3 (non-anchor) -> Category 4 (anchor)-->
            <createData entity="SubCategoryNonAnchor" stepKey="createCategory1">
                <field key="name">Test1</field>
                <field key="parent_id">0</field>
            </createData>
            <createData entity="SubCategoryWithParent" stepKey="createCategory2">
                <field key="name">Test2</field>
                <requiredEntity createDataKey="createCategory1"/>
            </createData>
            <createData entity="SubCategoryNonAnchor" stepKey="createCategory3">
                <field key="name">Test3</field>
                <requiredEntity createDataKey="createCategory2"/>
            </createData>
            <createData entity="SubCategoryWithParent" stepKey="createCategory4">
                <field key="name">Test4</field>
                <requiredEntity createDataKey="createCategory3"/>
            </createData>

            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>

            <!--create configurable product and assign it to Category4 ('Test4')-->
            <createData entity="ApiConfigurableProduct" stepKey="createConfigProduct1">
                <requiredEntity createDataKey="createCategory4"/>
            </createData>

            <!-- create 2 attributes -->
            <createData entity="productAttributeWithTwoOptions" stepKey="createConfigProduct1Attribute"/>
            <createData entity="productAttributeOption1" stepKey="createConfigProduct1AttributeOption1">
                <requiredEntity createDataKey="createConfigProduct1Attribute"/>
            </createData>
            <createData entity="productAttributeOption2" stepKey="createConfigProduct1AttributeOption2">
                <requiredEntity createDataKey="createConfigProduct1Attribute"/>
            </createData>
            <createData entity="AddToDefaultSet" stepKey="createConfigAddToAttributeSet">
                <requiredEntity createDataKey="createConfigProduct1Attribute"/>
            </createData>
            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getConfig1AttributeOption1">
                <requiredEntity createDataKey="createConfigProduct1Attribute"/>
            </getData>
            <getData entity="ProductAttributeOptionGetter" index="2" stepKey="getConfig1AttributeOption2">
                <requiredEntity createDataKey="createConfigProduct1Attribute"/>
            </getData>

            <!-- Create the 2 children that will be a part of the configurable product -->
            <createData entity="ApiSimpleOne" stepKey="createConfig1ChildProduct1">
                <requiredEntity createDataKey="createConfigProduct1Attribute"/>
                <requiredEntity createDataKey="getConfig1AttributeOption1"/>
            </createData>
            <createData entity="ApiSimpleTwo" stepKey="createConfig1ChildProduct2">
                <requiredEntity createDataKey="createConfigProduct1Attribute"/>
                <requiredEntity createDataKey="getConfig1AttributeOption2"/>
            </createData>

            <!-- Assign the two products to the configurable product -->
            <createData entity="ConfigurableProductTwoOptions" stepKey="createConfigProduct1Option1">
                <requiredEntity createDataKey="createConfigProduct1"/>
                <requiredEntity createDataKey="createConfigProduct1Attribute"/>
                <requiredEntity createDataKey="getConfig1AttributeOption1"/>
                <requiredEntity createDataKey="getConfig1AttributeOption2"/>
            </createData>
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProduct1AddChild1">
                <requiredEntity createDataKey="createConfigProduct1"/>
                <requiredEntity createDataKey="createConfig1ChildProduct1"/>
            </createData>
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProduct1AddChild2">
                <requiredEntity createDataKey="createConfigProduct1"/>
                <requiredEntity createDataKey="createConfig1ChildProduct2"/>
            </createData>

       <!--     <magentoCron stepKey="runCronIndex" groups="index"/> -->

        </before>

        <after>
    <!--        <deleteData createDataKey="createCategory4" stepKey="deleteCategory4"/>
            <deleteData createDataKey="createCategory3" stepKey="deleteCategory3"/>
            <deleteData createDataKey="createCategory2" stepKey="deleteCategory2"/>
            <deleteData createDataKey="createCategory1" stepKey="deleteCategory1"/>

            <deleteData createDataKey="createConfigProduct1" stepKey="deleteProduct1"/>
            <deleteData createDataKey="createConfig1ChildProduct1" stepKey="deleteConfig1ChildProduct1"/>
            <deleteData createDataKey="createConfig1ChildProduct2" stepKey="deleteConfig1ChildProduct2"/>

            <deleteData createDataKey="createConfigProduct1Attribute" stepKey="deleteConfigProductAttribute"/> -->

            <!--     <magentoCron stepKey="runCronIndex" groups="index"/> -->
        </after>

        <!--Go to Admin->Catalog->Products, filter grid by products turn by turn and disable them via bulk action-->
        <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="navigateToProductIndexPage"/>

        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterByProduct1">
            <argument name="product" value="$$createConfig1ChildProduct1$$"/>
        </actionGroup>

        <actionGroup ref="AdminSelectDeselectAllProductsInTheGridActionGroup" stepKey="selectAllProducts">
            <argument name="action" value="Select All"/>
        </actionGroup>

        <actionGroup ref="AdminEnableDisableProductsViaBulkActionInProductGridActionGroup" stepKey="disableProduct1">
            <argument name="action" value="Disable"/>
        </actionGroup>

        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterByProduct2">
            <argument name="product" value="$$createConfig1ChildProduct2$$"/>
        </actionGroup>

        <actionGroup ref="AdminSelectDeselectAllProductsInTheGridActionGroup" stepKey="selectAllProducts1">
            <argument name="action" value="Select All"/>
        </actionGroup>

        <actionGroup ref="AdminEnableDisableProductsViaBulkActionInProductGridActionGroup" stepKey="disableProducts">
            <argument name="action" value="Disable"/>
        </actionGroup>

        <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>


        <!-- 2nd way -->
        <!--go to admin and open product edit page to disable product all store view -->
        <!-- 2nd way        <amOnPage url="{{AdminProductEditPage.url($$createConfigProduct1.id$$)}}" stepKey="goToProductEditPage"/> -->
        <!-- 2nd way          <waitForPageLoad stepKey="waitEditPage"/> -->
        <!--  <click selector="{{AdminProductFormSection.enableProductLabel}}" stepKey="disableProductForAllStoreView"/>
          <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="clickSaveButton2"/>
          <waitForLoadingMaskToDisappear stepKey="waitForProductPageSave1" />
          <dontSeeCheckboxIsChecked selector="{{AdminProductFormSection.productStatus}}" stepKey="dontSeeCheckboxEnableProductIsChecked"/> -->

        <!-- Disable each of the child products for All Store views -->
        <!-- 2nd way       <click selector="{{AdminProductFormConfigurationsSection.actionsBtn('1')}}" stepKey="clickToExpandActionsForFirstVariation1"/>
              <waitForElementVisible selector="{{AdminProductFormConfigurationsSection.disableProductBtn}}" stepKey="waitForDisableButton"/>
              <click selector="{{AdminProductFormConfigurationsSection.disableProductBtn}}" stepKey="clickDisableChildProduct1"/>

              <click selector="{{AdminProductFormConfigurationsSection.actionsBtn('2')}}" stepKey="clickToExpandActionsForSecondVariation1"/>
              <waitForElementVisible selector="{{AdminProductFormConfigurationsSection.disableProductBtn}}" stepKey="waitForDisableButton1"/>
              <click selector="{{AdminProductFormConfigurationsSection.disableProductBtn}}" stepKey="clickDisableChildProduct2"/>

              <actionGroup ref="AdminFormSaveAndCloseActionGroup" stepKey="saveProduct"/> -->

        <!-- check non-anchored categories (Test1 and Test3):
          - only    following subcategory is displayed
          - there are no products in following subcategory
          -->
        <actionGroup ref="StorefrontGoToCategoryPageActionGroup" stepKey="openCategory1Page">
            <argument name="categoryName" value="$$createCategory1.name$$"/>
        </actionGroup>

        <actionGroup ref="StoreFrontAssertProductsQtyInCategoryInLayeredNavigationActionGroup" stepKey="checkNoProductsInCategory2">
           <argument name="qty" value="0"/>
            <argument name="category" value="$$createCategory2.name$$"/>
        </actionGroup>

        <actionGroup ref="StorefrontGoToSubCategory2PageActionGroup" stepKey="openCatgeory3">
            <argument name="categoryName" value="$$createCategory1.name$$"/>
            <argument name="subCategory1Name" value="$$createCategory2.name$$"/>
            <argument name="subCategory2Name" value="$$createCategory3.name$$"/>
        </actionGroup>

        <actionGroup ref="StoreFrontAssertProductsQtyInCategoryInLayeredNavigationActionGroup" stepKey="checkNoProductsInCategory4">
            <argument name="qty" value="0"/>
            <argument name="category" value="$$createCategory4.name$$"/>
        </actionGroup>

        <!-- open anchored categories (Test2 and Test4):
          -      there are no products  -->
        <actionGroup ref="StorefrontGoToSubCategoryPageActionGroup" stepKey="openCatgeory2">
            <argument name="categoryName" value="$$createCategory1.name$$"/>
            <argument name="subCategoryName" value="$$createCategory2.name$$"/>
        </actionGroup>

        <actionGroup ref="StorefrontAssertCategoryIsEmptyActionGroup" stepKey="seeEmptyNoticeCategory2"/>

        <actionGroup ref="StorefrontGoToSubCategory3PageActionGroup" stepKey="openCatgeory4">
            <argument name="categoryName" value="$$createCategory1.name$$"/>
            <argument name="subCategory1Name" value="$$createCategory2.name$$"/>
            <argument name="subCategory2Name" value="$$createCategory3.name$$"/>
            <argument name="subCategory3Name" value="$$createCategory4.name$$"/>
        </actionGroup>

        <actionGroup ref="StorefrontAssertCategoryIsEmptyActionGroup" stepKey="seeEmptyNoticeCategory4"/>

    </test>

</tests>



